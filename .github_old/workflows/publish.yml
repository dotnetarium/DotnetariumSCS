name: "2. Publish"
on:
  release:
    types: [published]

permissions: {}

jobs:
  release-notes:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v2
      with:
        ref: vs2019
        persist-credentials: true

    - name: Append release body to release notes
      env:
        release_notes: ${{github.event.release.body}}
      run: |
        git config --global user.email "octokit@github.com"
        git config --global user.name "Octokit"
        head --lines=2 website/releasenotes.md > website/new_releasenotes.md
        echo "$release_notes" >> website/new_releasenotes.md
        tail --lines=+2 website/releasenotes.md >> website/new_releasenotes.md
        mv website/new_releasenotes.md website/releasenotes.md
        sed -i 's/<AssemblyVersionNumber>[0-9]\.[0-9]\.[0-9]\.[0-9]<\/AssemblyVersionNumber>/<AssemblyVersionNumber>${{github.event.release.tag_name}}.9<\/AssemblyVersionNumber>/g' Directory.Build.props
        git add .
        git commit -a -m "Update release notes & bump dev version"
        git push
      shell: bash

  publish:
    needs: [release-notes]
    runs-on: windows-2022
    steps:

    - uses: actions/checkout@v2
      with:
        persist-credentials: false

    - name: Download artifacts
      uses: dsaltares/fetch-gh-release-asset@c3deec3cfc2231c6f842eef6d624b55223743c43
      with:
        file: 'security-scan.${{github.event.release.tag_name}}.nupkg'

    - name: Download artifacts
      uses: dsaltares/fetch-gh-release-asset@c3deec3cfc2231c6f842eef6d624b55223743c43
      with:
        file: 'SecurityCodeScan.VS2019.${{github.event.release.tag_name}}.nupkg'

    - name: Download artifacts
      uses: dsaltares/fetch-gh-release-asset@c3deec3cfc2231c6f842eef6d624b55223743c43
      with:
        file: 'SecurityCodeScan.VS2019.Vsix.vsix'

    - name: Publish vsix
      shell: powershell
      env:
        marketplace_token: ${{ secrets.MARKETPLACE_TOKEN }}
      run: |
        Write-Host "Pushing to visual studio market place"
        $visualStudioInstallation = & "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -latest -products * -requires Microsoft.VisualStudio.Component.VSSDK -property installationPath
        $vsixPublisher = Join-Path $visualStudioInstallation 'VSSDK\VisualStudioIntegration\Tools\Bin\VsixPublisher.exe'
        & $vsixPublisher login -publisherName JaroslavLobacevski -personalAccessToken $env:marketplace_token
        $vsix =  Get-ChildItem -File SecurityCodeScan.VS2019.Vsix.vsix -recurse | Select-Object -First 1 -ExpandProperty FullName
        $ManifestPath = ".\SecurityCodeScan.Vsix\marketplace.json"
        & $vsixPublisher publish -payload $vsix -publishManifest $ManifestPath -personalAccessToken $env:marketplace_token
        # currently vsixpublisher.exe throws non critical telemetry exception but does the job done
        # force successful exit code
        [Environment]::Exit(0)

    - name: Publish nugets
      shell: bash
      env:
        nuget_token: ${{ secrets.NUGET_TOKEN }}
      run: |
        dotnet nuget push "SecurityCodeScan.VS2019.${{github.event.release.tag_name}}.nupkg" -k $nuget_token -s https://api.nuget.org/v3/index.json
        dotnet nuget push "security-scan.${{github.event.release.tag_name}}.nupkg" -k $nuget_token -s https://api.nuget.org/v3/index.json
